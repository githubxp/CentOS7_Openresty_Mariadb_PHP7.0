[prepare]
yum -y install libxml2 libxml2-devel openssl curl-devel libjpeg-devel libpng-devel freetype-devel libmcrypt-devel

yum install -y apr* autoconf automake bison bzip2 bzip2* cloog-ppl cmake cpp curl curl-devel fontconfig fontconfig-devel freetype freetype* freetype-devel gcc gcc-c++ gtk+-devel gd gettext gettext-devel glibc kernel kernel-headers keyutils keyutils-libs-devel krb5-devel libcom_err-devel libpng libpng-devel libjpeg* libsepol-devel libselinux-devel libstdc++-devel libtool* libgomp libxml2 libxml2-devel libXpm* libtiff libtiff* make mpfr ncurses* ntp openssl openssl-devel patch pcre-devel perl php-common php-gd policycoreutils telnet t1lib t1lib* nasm nasm* zlib-devel gd-devel 

useradd www

[openresty]
cd ~
git clone git://github.com/yaoweibin/ngx_http_substitutions_filter_module.git

cd ~
wget https://openresty.org/download/openresty-1.11.2.5.tar.gz
tar -xzvf openresty-1.11.2.5.tar.gz
cd ~/openresty
./configure --user=www --group=www --with-pcre-jit --with-http_sub_module --with-ipv6 --with-http_iconv_module --with-http_gzip_static_module --with-http_realip_module --add-module=/root/ngx_http_substitutions_filter_module --with-http_stub_status_module
gmake
gmake install

[Mariadb--->SWAP]
dd if=/dev/zero of=/home/swap bs=1024 count=1048576
mkswap /home/swap
swapon /home/swap
(swapoff /home/swap)
vi /etc/fstab
/home/swap swap swap default 0 0

[nginx.conf]
user  www;
worker_processes  1;

#error_log  logs/nginx_error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;
    #set_real_ip_from IP_address
    real_ip_header X-Forwarded-For;

    upstream php-handler {
        server 127.0.0.1:9000;
        #server unix:/var/run/php5-fpm.sock;
    }
    
    server {
        listen       80;
        server_name  YOUR DOMAIN 1;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 80;
        server_name YOUR DOMAIN 2;
        charset         utf-8;
        root            /usr/local/webroot/;
        index           index.php index.html index.htm;
        
        location / {
            if (!-e $request_filename) {
                rewrite  ^(.*)$  /index.php?s=/$1  last;
                break;
            }
            try_files   $uri $uri/ =404;
        }
    
        location ~ \.php$ {
	    fastcgi_pass    php-handler;
            fastcgi_index   index.php;
	    fastcgi_intercept_errors on;
            fastcgi_read_timeout 150;
            fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
	    fastcgi_param   HTTPS on;
            include         fastcgi_params;
        }
    }

    server {
        listen          443 ssl;
        server_name     YOUR DOMAIN 1;
        ssl             on;
        charset         utf-8;
        root            /usr/local/webroot/;
        index           index.php index.html index.htm;
 
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        ssl_certificate      12345678.pem;
        ssl_certificate_key  12345678.key;
        ssl_session_timeout  5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers AESGCM:ALL:!DH:!EXPORT:!RC4:+HIGH:!MEDIUM:!LOW:!aNULL:!eNULL;
        ssl_prefer_server_ciphers on;

        auth_basic "access control!";
        auth_basic_user_file /usr/local/openresty/nginx/conf/passwd;

        location / {
            if (!-e $request_filename) {
                rewrite  ^(.*)$  /index.php?s=/$1  last;
                break;
            }
            try_files   $uri $uri/ =404;
        }

	    location ~ \.php$ {
	    fastcgi_pass    php-handler;
            fastcgi_index   index.php;
	    fastcgi_intercept_errors on;
            fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
	    fastcgi_param   HTTPS on;
            include         fastcgi_params;
        }
    }

}


[mariadb]
http://mirrors.neusoft.edu.cn/mariadb//mariadb-10.1.26/source/mariadb-10.1.26.tar.gz
cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql
make
make install

mv /etc/my.cnf /etc/my.cnf.bak

cd /usr/local/mysql
./scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data

##ln -s /usr/local/mysql/my.cnf /etc/my.cnf
##cp ./support-files/mysql.server /etc/rc.d/init.d/mysqld &&
##chmod 755 /etc/init.d/mysqld &&
##chkconfig mysqld on


###############################################################
To start mysqld at boot time you have to copy
support-files/mysql.server to the right place for your system

PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !
To do so, start the server, then issue the following commands:

'/usr/local/mysql/bin/mysqladmin' -u root password 'new-password'
'/usr/local/mysql/bin/mysqladmin' -u root -h iZ23betjdxaZ password 'new-password'

Alternatively you can run:
'/usr/local/mysql/bin/mysql_secure_installation'

You can start the MariaDB daemon with:
cd '/usr/local/mysql' ; /usr/local/mysql/bin/mysqld_safe --datadir='/usr/local/mysql/data' &

You can test the MariaDB daemon with mysql-test-run.pl
cd '/usr/local/mysql/mysql-test' ; perl mysql-test-run.pl

###########################################################



[PHP]

wget http://cn2.php.net/distributions/php-7.0.11.tar.gz

./configure --prefix=/usr/local/php \
--with-config-file-path=/usr/local/php/etc \
--with-mysqli=/usr/local/mysql/bin/mysql_config \
--with-mysql-sock=/tmp/mysql.sock \
--with-pdo-mysql=/usr/local/mysql \
--with-gd \
--with-png-dir=/usr/local/libpng \
--with-jpeg-dir=/usr/local/jpeg \
--with-freetype-dir=/usr/local/freetype \
--with-xpm-dir=/usr/ \
--with-zlib-dir=/usr/local/zlib \
--with-iconv \
--enable-libxml \
--enable-xml \
--enable-bcmath \
--enable-shmop \
--enable-sysvsem \
--enable-inline-optimization \
--enable-opcache \
--enable-mbregex \
--enable-fpm \
--enable-mbstring \
--enable-ftp \
--enable-gd-native-ttf \
--with-openssl \
--enable-pcntl \
--enable-sockets \
--with-xmlrpc \
--enable-zip \
--enable-soap \
--without-pear \
--with-gettext \
--enable-session \
--with-mcrypt \
--with-curl \
--enable-exif \
--enable-ctype \
--enable-maintainer-zts


make
make install

cp php.ini-production /usr/local/php/etc/php.ini
mv /etc/php.ini /etc/php.ini.bak
ln -s /usr/local/php/etc/php.ini /etc/php.ini
cp /usr/local/php/etc/php-fpm.conf.default  /usr/local/php/etc/php-fpm.conf
ln -s /usr/local/php/etc/php-fpm.conf /etc/php-fpm.conf

vi /usr/local/php/etc/php.ini
disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname


expose_php = Off 
date.timezone = Asia/Shanghai
short_open_tag 
Default Value: On 
Development Value: Off 
Production Value: Off 
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=64
opcache.interned_strings_buffer=4
opcache.max_accelerated_files=2000
opcache.revalidate_freq=2
opcache.fast_shutdown=1

vi /usr/local/php/etc/php-fpm.conf 
pid = run/php-fpm.pid

mv /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf
vi /usr/local/php/etc/php-fpm.d/www.conf
user = www 
group = www

slowlog = /var/log/php-fpm.log.slow
request_slowlog_timeout = 10s
request_terminate_timeout = 20s

#cp /usr/local/src/php-7.1.0/sapi/fpm/init.d.php-fpm /etc/rc.d/init.d/php-fpm &&
#chmod +x /etc/rc.d/init.d/php-fpm &&
#chkconfig php-fpm on

[php-pthreads]
wget http://pecl.php.net/get/pthreads-3.1.6.tgz
tar -xzvf pthreads-3.1.6.tgz
cd pthreads-3.1.6/
/usr/local/php/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config
make
make install
vi php-cli.ini ++ extension=/usr/local/php/lib/php/extensions/no-debug-zts-20151012/pthreads.so


[nginx<--->php]

server {
        listen       80;
        server_name  server_domain_name_or_IP;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        root   /usr/local/www;
        index  index.php index.html index.htm;


        location / {
            try_files $uri $uri/ =404;
        }

	error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/openresty/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        location ~ \.php$ {
	    try_files $uri =404;
	    fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
}

根目录： /usr/local/openresty/nginx/html/ 
Nginx配置文件： /usr/local/openresty/nginx/conf/nginx.conf 
PHP配置文件： /usr/local/php/etc/php.ini 
PHP默认拓展文件夹：/usr/lib64/php/modules/ 
PHP拓展可放置于：/usr/local/php/lib/php/extensions/no-debug-non-zts-20151012 
MySQL配置文件： /etc/my.cnf 
MySQL程序安装路径： basedir=/usr/local/mysql 
MySQl数据库存放目录： datadir=/usr/local/mysql/data
